"""Мы никогда не храним пароли в открытом виде!
Мы храним в БД исключительно результат работы хеш-функции, то есть хеш от пароля
    Хеш-функция - это функция, которая необратимо искажает исходную строку(пароль), получается хеш, так что
    нельзя получить из хеша исходную строку - пароль

    Хеш - это искаженная строка (результат работы хеш-функции), построенная на базе другой, нормальной строки - пароля

    Пароль --> хеш
    HMAC -SHA256
    HMAC - hash-based message authentication code - способ аутентификации по хэшу
    Используется для аутентификации сообщения по хэш-функциям
    SHA256 - хэш-функция

    Пароль --> хеш
    HMAC -SHA512
    Сложность пароля влияет на хэш
    Требуется секрет
    Сложность и длинна секрета влияет на хеш
    Надежнее почти в два раза

    Пароль:
    должен быть сложным
    - Минимум 8 символов (UhS^4b2FSz)
    - Минимум 1 буква в верхнем регистре (U)
    - Минимум 1 цифра (3)
    - Минимум 1 спецсимвол (^%@)
    - В нём не должно быть словарного слова (password, magic, baby)
    - В нём не должно быть закодированного слова (MyB@by)

    Чем сложнее пароль, тем сложнее подобрать хэш

    Взлом:
    - Брутфорс (подбор)
    - Похищение базы с хешами
    - Социальна инженерия

    Соль - это строка, которая добавляется перед паролем, чтобы хеш получился сложнее и его сложнее было подобрать
    <anything> + <password> - конкатенация
    saltpassword

    Зачем нужна соль ? Если генерировать хэш без соли, то его проще подобрать.
    """